import re

def validar_nome(nome):
    padrao = r"^[A-Z][a-z]+( [A-Z][a-z]+)*( [A-Z][a-z]+)$"
    return bool(re.match(padrao, nome))

# Exemplos de teste
print(validar_nome("Ada Lovelace"))  # True
print(validar_nome("Alan"))  # False (falta o sobrenome)

def validar_email(email):
    padrao = r"^[a-z]+@[a-z]+\.(com\.br|br)$"
    return bool(re.match(padrao, email))

# Exemplos de teste
print(validar_email("divulga@ufpa.br"))  # True
print(validar_email("T@teste.br"))  # False (caractere maiúsculo)

def validar_senha(senha):
    padrao = r"^(?=.*[A-Z])(?=.*\d)[A-Za-z\d]{8}$"
    return bool(re.match(padrao, senha))

# Exemplos de teste
print(validar_senha("518R2r5e"))  # True
print(validar_senha("F1234567A"))  # False (mais de 8 caracteres)

def validar_cpf(cpf):
    padrao = r"^\d{3}\.\d{3}\.\d{3}-\d{2}$"
    return bool(re.match(padrao, cpf))

# Exemplos de teste
print(validar_cpf("123.456.789-09"))  # True
print(validar_cpf("123.456.789-0"))  # False

def validar_telefone(telefone):
    padrao = r"^\(?\d{2}\)? ?9\d{4}-?\d{4}$"
    return bool(re.match(padrao, telefone))

# Exemplos de teste
print(validar_telefone("(91) 99999-9999"))  # True
print(validar_telefone("(94)95555-5555"))  # False (falta espaço)


def validar_data_horario(data_horario):
    padrao = r"^\d{2}/\d{2}/\d{4} \d{2}:\d{2}:\d{2}$"
    return bool(re.match(padrao, data_horario))

# Exemplos de teste
print(validar_data_horario("31/08/2019 20:14:55"))  # True
print(validar_data_horario("99/99/9999 3:9:9"))  # False

def validar_numero_real(numero):
    padrao = r"^[+-]?\d+(\.\d+)?$"
    return bool(re.match(padrao, numero))

# Exemplos de teste
print(validar_numero_real("-25.467"))  # True
print(validar_numero_real("1."))  # False
